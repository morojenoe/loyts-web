{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/chat-room/chat-room.component.html","webpack:///./src/app/components/chat-room/chat-room.component.scss","webpack:///./src/app/components/chat-room/chat-room.component.ts","webpack:///./src/app/components/explore/explore.component.html","webpack:///./src/app/components/explore/explore.component.scss","webpack:///./src/app/components/explore/explore.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/my-application/create-application/create-application.component.html","webpack:///./src/app/components/my-application/create-application/create-application.component.scss","webpack:///./src/app/components/my-application/create-application/create-application.component.ts","webpack:///./src/app/components/my-application/my-application.component.html","webpack:///./src/app/components/my-application/my-application.component.scss","webpack:///./src/app/components/my-application/my-application.component.ts","webpack:///./src/app/components/register/passwords.validator.ts","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.scss","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/core/auth.service.ts","webpack:///./src/app/models/application.ts","webpack:///./src/app/models/proposal.ts","webpack:///./src/app/services/application.service.ts","webpack:///./src/app/services/in-memory-data.service.ts","webpack:///./src/app/services/voice-recorder.service.ts","webpack:///./src/app/shared/application/application.component.html","webpack:///./src/app/shared/application/application.component.scss","webpack:///./src/app/shared/application/application.component.ts","webpack:///./src/app/shared/create-proposal/create-proposal.component.html","webpack:///./src/app/shared/create-proposal/create-proposal.component.scss","webpack:///./src/app/shared/create-proposal/create-proposal.component.ts","webpack:///./src/app/shared/input-language/input-language.component.html","webpack:///./src/app/shared/input-language/input-language.component.scss","webpack:///./src/app/shared/input-language/input-language.component.ts","webpack:///./src/app/shared/input-tags/input-tags.component.html","webpack:///./src/app/shared/input-tags/input-tags.component.scss","webpack:///./src/app/shared/input-tags/input-tags.component.ts","webpack:///./src/app/shared/player/player-state.ts","webpack:///./src/app/shared/player/player.component.html","webpack:///./src/app/shared/player/player.component.scss","webpack:///./src/app/shared/player/player.component.ts","webpack:///./src/app/shared/proposal/proposal.component.html","webpack:///./src/app/shared/proposal/proposal.component.scss","webpack:///./src/app/shared/proposal/proposal.component.ts","webpack:///./src/app/shared/record-voice/record-voice.component.html","webpack:///./src/app/shared/record-voice/record-voice.component.scss","webpack:///./src/app/shared/record-voice/record-voice.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExploreComponent } from './components/explore/explore.component';\nimport { ChatRoomComponent } from './components/chat-room/chat-room.component';\nimport { MyApplicationComponent } from './components/my-application/my-application.component';\nimport { CreateApplicationComponent } from './components/my-application/create-application/create-application.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'explore', component: ExploreComponent },\n  { path: 'application', component: MyApplicationComponent },\n  { path: 'application/create', component: CreateApplicationComponent },\n  { path: 'chat-room', component: ChatRoomComponent },\n  { path: '', redirectTo: '/explore', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<mat-toolbar class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n  <span>Loyts</span>\\n  <button\\n    mat-icon-button\\n    [matMenuTriggerFor]=\\\"authService.isLoggedIn()? menuLoggedIn : menuLoggedOut\\\"\\n  >\\n    <mat-icon [color]=\\\"authService.isLoggedIn()? 'primary' : null\\\">account_circle</mat-icon>\\n  </button>\\n</mat-toolbar>\\n<mat-menu #menuLoggedOut=\\\"matMenu\\\">\\n  <!-- <ng-template matMenuContent> -->\\n    <a routerLink=\\\"/login\\\" mat-menu-item>Login</a>\\n    <a routerLink=\\\"/register\\\" mat-menu-item >Sign Up</a>\\n  <!-- </ng-template> -->\\n</mat-menu>\\n<mat-menu #menuLoggedIn=\\\"matMenu\\\">\\n  <!-- <ng-template matMenuContent> -->\\n    <button mat-menu-item (click)=\\\"logout()\\\">Logout</button>\\n  <!-- </ng-template> -->\\n</mat-menu>\\n\\n<nav\\n  mat-tab-nav-bar\\n  mat-stretch-tabs\\n  *ngIf=\\\"authService.isLoggedIn()\\\"\\n>\\n  <a\\n    mat-tab-link\\n    *ngFor=\\\"let component of components\\\"\\n    (click)=\\\"activeComponent = component.title\\\"\\n    [routerLink]=\\\"component.routerLink\\\"\\n    routerLinkActive #rla=\\\"routerLinkActive\\\"\\n    [active]=\\\"rla.isActive\\\"\\n  >\\n    {{ component.title }}\\n  </a>\\n</nav>\\n  \\n<div fxLayout=\\\"column\\\">\\n  <div fxFlexOffset=\\\"20px\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <div fxFlex.gt-xs=\\\"600px\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".header {\\n  font-family: 'Satisfy'; }\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './core/auth.service';\n\nclass Navigation {\n  title: string;\n  routerLink: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  readonly components: Navigation[] = [\n    { title: 'Explore', routerLink: '/explore' },\n    { title: 'Application', routerLink: '/application' },\n    { title: 'Chat Room', routerLink: '/chat-room' },\n  ];\n  constructor(private authService: AuthService, private router: Router) { }\n\n  logout() {\n    this.authService.signOut();\n    this.router.navigate(['/login']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from '../environments/environment';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ExploreComponent } from './components/explore/explore.component';\nimport { ChatRoomComponent } from './components/chat-room/chat-room.component';\nimport { MyApplicationComponent } from './components/my-application/my-application.component';\nimport { CreateApplicationComponent } from './components/my-application/create-application/create-application.component';\nimport { RecordVoiceComponent } from './shared/record-voice/record-voice.component';\nimport { InputTagsComponent } from './shared/input-tags/input-tags.component';\nimport { InputLanguageComponent } from './shared/input-language/input-language.component';\nimport { PlayerComponent } from './shared/player/player.component';\nimport { ApplicationComponent } from './shared/application/application.component';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './services/in-memory-data.service';\nimport { CreateProposalComponent } from './shared/create-proposal/create-proposal.component';\nimport { ProposalComponent } from './shared/proposal/proposal.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExploreComponent,\n    ChatRoomComponent,\n    MyApplicationComponent,\n    CreateApplicationComponent,\n    RecordVoiceComponent,\n    InputTagsComponent,\n    InputLanguageComponent,\n    PlayerComponent,\n    ApplicationComponent,\n    CreateProposalComponent,\n    ProposalComponent,\n    LoginComponent,\n    RegisterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatButtonModule,\n    MatStepperModule,\n    MatIconModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatProgressBarModule,\n    MatExpansionModule,\n    MatListModule,\n    MatCardModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    MatMenuModule,\n\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n  <p class=\\\"mat-body-1\\\">\\n    There're no rooms yet.\\n    <a mat-button color=\\\"accent\\\" routerLink=\\\"/application\\\">create your application</a>\\n    or\\n    <a mat-button color=\\\"accent\\\" routerLink=\\\"/explore\\\">propose yourself</a>.\\n  </p>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.scss']\n})\nexport class ChatRoomComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"30px\\\">\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Tag search</mat-label>\\n    <input\\n      #filterInput\\n      matInput\\n      (keyup)=\\\"filter(filterInput.value)\\\"\\n      maxLength=\\\"50\\\"\\n    >\\n    <mat-hint align=\\\"end\\\">{{filterInput.value.length}} / 50</mat-hint>\\n    <mat-icon matSuffix>search</mat-icon>\\n  </mat-form-field>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n  \\n  <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center\\\" fxFlexFill>\\n    <ng-container *ngFor=\\\"let application of applications$ | async; let i = index\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n        <div fxFlex.xs=\\\"96vw\\\">\\n          <app-application\\n            [application]=\\\"application\\\"\\n            [proposal]=\\\"findProposal(application.id)\\\"\\n          >\\n          </app-application>\\n        </div>\\n      </div>\\n    </ng-container>\\n  </div>\\n\\n  <div *ngIf=\\\"(applications$ | async)?.length === 0\\\"\\n    fxLayout=\\\"row\\\"\\n    fxLayoutAlign=\\\"center center\\\"\\n    fxLayoutGap=\\\"10px\\\"\\n  >\\n    <p>\\n      Nothing found for:\\n    </p>\\n    <mat-chip-list>\\n      <mat-chip>{{filterInput.value}}</mat-chip>\\n    </mat-chip-list>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Inject, QueryList, ViewChildren } from '@angular/core';\nimport { IApplicationService } from '../../interfaces/i-application-service';\nimport { ApplicationService } from '../../services/application.service';\nimport { Application } from '../../models/application';\nimport { Proposal } from '../../models/proposal';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, startWith } from 'rxjs/operators';\nimport { ApplicationComponent } from '../../shared/application/application.component';\nimport { PlayerState } from '../../shared/player/player-state';\n\n@Component({\n  selector: 'app-explore',\n  templateUrl: './explore.component.html',\n  styleUrls: ['./explore.component.scss']\n})\nexport class ExploreComponent implements OnInit {\n  @ViewChildren(ApplicationComponent) applicationComponents: QueryList<ApplicationComponent>;\n  applications$: Observable<Application[]>;\n  searchTerms = new Subject<string>();\n  proposals: Proposal[];\n  playingApplicationId: number;\n  creatingProposalForAppId: number;\n  proposalMessage: any;\n\n  constructor(@Inject(ApplicationService) private applicationService: IApplicationService) { }\n\n  ngOnInit() {\n    this.applications$ = this.searchTerms.pipe(\n      startWith(''),\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.applicationService.filterApplications(term)),\n    );\n    this.applicationService.getProposals().subscribe(\n      proposals => this.proposals = proposals\n    );\n  }\n\n  findProposal(applicationId): Proposal {\n    const proposal = this.proposals.find(prop => prop.applicationId === applicationId);\n    if (proposal) {\n      return proposal;\n    }\n    return undefined;\n  }\n\n  isAlreadyApplied(applicationId: number): boolean {\n    return this.proposals.findIndex(proposal => proposal.applicationId === applicationId) !== -1;\n  }\n\n  filter(value: string): void {\n    this.searchTerms.next(value);\n  }\n\n  initVoiceRecording(applicationId: number) {\n    if (this.creatingProposalForAppId && this.creatingProposalForAppId === applicationId) {\n      this.creatingProposalForAppId = undefined;\n    } else {\n      this.creatingProposalForAppId = applicationId;\n    }\n  }\n\n  changePlayerState(appId: number, playerState: PlayerState): void {\n    if (this.playingApplicationId !== undefined && this.playingApplicationId !== appId) {\n      const appComponent = this.applicationComponents.find(\n        app => app.application.id === this.playingApplicationId);\n      this.playingApplicationId = undefined;\n      if (appComponent !== undefined) {\n        appComponent.stopPlaying();\n      }\n    }\n    if (playerState === PlayerState.Playing) {\n      this.playingApplicationId = appId;\n    } else {\n      this.playingApplicationId = undefined;\n    }\n  }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"form-margin\\\">\\n  <div class=\\\"mat-title\\\" fxFlexAlign=\\\"center\\\">Login</div>\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div fxLayout=\\\"column\\\">\\n      <mat-form-field\\n        fxFlexFill\\n        fxFlexAlign=\\\"center\\\"\\n      >\\n        <mat-error>{{emailErrorMessage}}</mat-error>\\n        <input\\n          matInput\\n          type=\\\"email\\\"\\n          placeholder=\\\"Email\\\"\\n          formControlName=\\\"emailFormControl\\\"\\n        >\\n      </mat-form-field>\\n      <mat-form-field\\n        fxFlexFill\\n        fxFlexAlign=\\\"center\\\"\\n        hintLabel=\\\"Minimum 6 symbols\\\"\\n      >\\n        <mat-error>{{passwordErrorMessage}}</mat-error>\\n        <input\\n          matInput\\n          maxLength=\\\"50\\\"\\n          type=\\\"password\\\"\\n          placeholder=\\\"Password\\\"\\n          formControlName=\\\"passwordFormControl\\\"\\n        >\\n      </mat-form-field>\\n      <button\\n        mat-raised-button\\n        type=\\\"submit\\\"\\n        fxFlexOffset=\\\"20px\\\"\\n        [disabled]=\\\"loginForm.invalid\\\"\\n      >\\n        Login\\n      </button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \".form-margin {\\n  margin: 25px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { AuthService } from '../../core/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm = new FormGroup({\n    emailFormControl: new FormControl('', [\n      Validators.required,\n      Validators.email,\n    ]),\n    passwordFormControl: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(50),\n    ]),\n  });\n  emailErrorMessage: string;\n  passwordErrorMessage: string;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.get('emailFormControl').value;\n      const password = this.loginForm.get('passwordFormControl').value;\n      this.authService.signInWithEmail(email, password).subscribe(\n        error => {\n          if (!error) {\n            this.router.navigate(['/']);\n          } else {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            switch(errorCode) {\n              case 'auth/invalid-email': ;\n              case 'auth/user-disabled': ;\n              case 'auth/user-not-found': {\n                this.loginForm.get('emailFormControl').setErrors({\n                  error: true,\n                });\n                this.emailErrorMessage = errorMessage;\n                break;\n              }\n              case 'auth/wrong-password': {\n                this.loginForm.get('passwordFormControl').setErrors({\n                  error: true,\n                });\n                this.passwordErrorMessage = errorMessage;\n                break;\n              }\n              default: {\n                console.log('unexpected error: ', errorMessage, ', error_code: ', errorCode);\n              }\n            }\n          }\n        }\n      );\n    }\n  }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\n  <div class=\\\"mat-subheading-1 title-margin\\\" fxFlexAlign=\\\"center\\\">\\n    You've not created an application yet or have done it more than 2 hours ago.\\n  </div>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n    <mat-vertical-stepper fxFlex=\\\"100vw\\\" linear (selectionChange)=\\\"selectionChange($event)\\\">\\n      <mat-step label=\\\"Record Application\\\" [completed]=\\\"application.audio\\\">\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n          <mat-accordion>\\n            <mat-expansion-panel>\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                  What should be in your application\\n                </mat-panel-title>\\n              </mat-expansion-panel-header>\\n              <div class=\\\"mat-body-1\\\">\\n                  In your application try to emphasize your goals and what kind of person you are looking for.\\n              </div>\\n              <mat-accordion>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                      Example 1\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"mat-body-1\\\">\\n                    Hi! My name is Lin Lin. I'm from China. On the next week, I'm going to visit Paris,\\n                    so I'm looking for someone from this town or who were there to talk about must visit places.\\n                  </div>\\n                </mat-expansion-panel>\\n                <mat-expansion-panel>\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                      Example 2\\n                    </mat-panel-title>\\n                  </mat-expansion-panel-header>\\n                  <div class=\\\"mat-body-1\\\">\\n                    Hi there! My name is Mark. I want to talk to someone who loves football as I am.\\n                    If you watch La Liga and root for FC Barcelona, let's root for together!\\n                  </div>\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n            </mat-expansion-panel>\\n          </mat-accordion>\\n          <app-record-voice (recordedVoice)=\\\"recordedVoice($event)\\\"></app-record-voice>\\n        </div>\\n        <div class=\\\"stepper-buttons\\\" *ngIf=\\\"application.audio\\\">\\n          <button mat-raised-button color=\\\"primary\\\" matStepperNext>\\n            Next\\n          </button>\\n        </div>\\n      </mat-step>\\n      <mat-step label=\\\"Choose the Language\\\" [completed]=\\\"application.language\\\">\\n        <app-input-language (changeLanguage)=\\\"changeLanguage($event)\\\"></app-input-language>\\n        <div class=\\\"stepper-buttons\\\" fxLayoutGap=\\\"10px\\\">\\n          <button mat-raised-button color=\\\"warn\\\" matStepperPrevious>Back</button>\\n          <button\\n            mat-raised-button\\n            color=\\\"primary\\\"\\n            matStepperNext\\n            [disabled]=\\\"!application.language\\\"\\n          >\\n            Next\\n          </button>\\n        </div>\\n      </mat-step>\\n      <mat-step label=\\\"Choose Tags\\\">\\n        <app-input-tags (tagsChanged)=\\\"tagsChanged($event)\\\"></app-input-tags>\\n        <div class=\\\"stepper-buttons\\\" fxLayoutGap=\\\"10px\\\">\\n          <button mat-raised-button color=\\\"warn\\\" matStepperPrevious>Back</button>\\n          <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\n        </div>\\n      </mat-step>\\n      <mat-step label=\\\"Publish\\\">\\n        <div fxLayout=\\\"row\\\">\\n          <div fxFlex.xs=\\\"nogrow\\\" class=\\\"step-wrapper\\\">\\n            <app-application [application]=\\\"application\\\"></app-application>\\n          </div>\\n        </div>\\n        <div class=\\\"stepper-buttons\\\" fxLayoutGap=\\\"10px\\\">\\n          <button mat-raised-button color=\\\"warn\\\" matStepperPrevious>Back</button>\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"publish()\\\">Publish</button>\\n        </div>\\n      </mat-step>\\n    </mat-vertical-stepper>\\n  </div>\\n</div>\"","module.exports = \".stepper-buttons {\\n  margin-top: 10px; }\\n\\n.title-margin {\\n  margin-left: 15px;\\n  margin-right: 15px; }\\n\\n.step-wrapper {\\n  min-width: 0px; }\\n\\n.vertical-stepper-wrapper {\\n  min-width: 0px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\nimport { ApplicationService } from '../../../services/application.service';\nimport { IApplicationService } from '../../../interfaces/i-application-service';\nimport { Application } from '../../../models/application';\n\n@Component({\n  selector: 'app-create-application',\n  templateUrl: './create-application.component.html',\n  styleUrls: ['./create-application.component.scss']\n})\nexport class CreateApplicationComponent implements OnInit {\n  application: Application;\n  constructor(@Inject(ApplicationService) private appService: IApplicationService,\n              private router: Router) {\n    this.application = new Application();\n  }\n\n  ngOnInit() {\n    this.appService.getMyApplication().subscribe(\n      application => {\n        if (application) {\n          this.router.navigate(['/application']);\n        }\n      }\n    );\n  }\n\n  changeLanguage(language: string) {\n    this.application.language = language;\n  }\n\n  tagsChanged(tags: Array<string>) {\n    this.application.tags = tags;\n  }\n\n  recordedVoice(audio: any) {\n    this.application.audio = audio;\n  }\n\n  selectionChange(event: StepperSelectionEvent) {\n    if (event.selectedIndex === 3) {\n      this.application.time = new Date(Date.now());\n    }\n  }\n\n  publish() {\n    this.application.time = new Date(Date.now());\n    this.appService.addApplication(this.application).subscribe(\n      application => {\n        this.router.navigate(['/application']);\n      }\n    );\n  }\n}\n","module.exports = \"<ng-container *ngIf=\\\"application\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n    <div fxFlex.xs=\\\"96vw\\\">\\n      <app-application [application]=\\\"application\\\"></app-application>\\n    </div>\\n  </div>\\n</ng-container>\\n\"","module.exports = \"\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApplicationService } from '../../services/application.service';\nimport { IApplicationService } from '../../interfaces/i-application-service';\nimport { Application } from '../../models/application';\n\n@Component({\n  selector: 'app-my-application',\n  templateUrl: './my-application.component.html',\n  styleUrls: ['./my-application.component.scss']\n})\nexport class MyApplicationComponent implements OnInit {\n  application: Application;\n  constructor(@Inject(ApplicationService) private appService: IApplicationService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.appService.getMyApplication().subscribe(\n      application => {\n        if (!application) {\n          this.router.navigate(['/application/create']);\n        } else {\n          this.application = application;\n        }\n      }\n    );\n  }\n\n}\n","import { AbstractControl, ValidationErrors, FormControl } from '@angular/forms';\n\nexport class PasswordsValidator {\n  static validate(control: AbstractControl): ValidationErrors | null {\n    let password = control.get('passwordFormControl').value;\n    let confirmPassword = control.get('passwordAgainFormControl').value;\n    if (password !== confirmPassword) {\n      control.get('passwordAgainFormControl').setErrors( {MatchPassword: true} )\n    }\n    return null\n  }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"form-margin\\\">\\n  <div class=\\\"mat-title\\\" fxFlexAlign=\\\"center\\\">Create an Account</div>\\n  <form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div fxLayout=\\\"column\\\">\\n      <mat-form-field\\n        fxFlexFill\\n        fxFlexAlign=\\\"center\\\"\\n      >\\n        <mat-error>{{emailError}}</mat-error>\\n        <input\\n          matInput\\n          type=\\\"email\\\"\\n          placeholder=\\\"Email\\\"\\n          formControlName=\\\"emailFormControl\\\"\\n        >\\n      </mat-form-field>\\n      <div\\n        fxLayout=\\\"row\\\"\\n        fxLayoutAlign=\\\"center center\\\"\\n        fxLayoutGap=\\\"25px\\\"\\n        formGroupName=\\\"passwordsGroup\\\"\\n      >\\n        <mat-form-field\\n          fxFlex=\\\"grow\\\"\\n          hintLabel=\\\"Minimum 6 symbols\\\"\\n        >\\n          <mat-error>{{passwordError}}</mat-error>\\n          <input\\n            #pass\\n            matInput\\n            maxLength=\\\"50\\\"\\n            type=\\\"password\\\"\\n            placeholder=\\\"Password\\\"\\n            formControlName=\\\"passwordFormControl\\\"\\n          >\\n        </mat-form-field>\\n        <mat-form-field\\n          fxFlex=\\\"grow\\\"\\n          hintLabel=\\\"Passwords identical\\\"\\n        >\\n          <mat-error>Passwords don't match</mat-error>\\n          <input\\n            matInput\\n            maxLength=\\\"50\\\"\\n            type=\\\"password\\\"\\n            placeholder=\\\"Password again\\\"\\n            formControlName=\\\"passwordAgainFormControl\\\"\\n          >\\n        </mat-form-field>\\n      </div>\\n      <button\\n        mat-raised-button\\n        fxFlexOffset=\\\"20px\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"registrationForm.invalid\\\"\\n      >\\n        Sign Up\\n      </button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\n\nimport { PasswordsValidator } from './passwords.validator';\nimport { AuthService } from '../../core/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  readonly validatorsForPass = [\n    Validators.required,\n    Validators.minLength(6),\n    Validators.maxLength(50),\n  ];\n  registrationForm = new FormGroup({\n    emailFormControl: new FormControl('', [\n      Validators.required,\n      Validators.email,\n    ]),\n    passwordsGroup: new FormGroup({\n      passwordFormControl: new FormControl('', this.validatorsForPass),\n      passwordAgainFormControl: new FormControl(''),\n    }, PasswordsValidator.validate),\n  });\n  emailError: string;\n  passwordError: string;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    \n  }\n\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      const email = this.registrationForm.get('emailFormControl').value;\n      const password = this.registrationForm.get('passwordsGroup.passwordFormControl').value;\n      this.authService.signUpWithEmail(email, password).subscribe(\n        error => {\n          if (!error) {\n            this.router.navigate(['/explore']);\n          } else {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            switch(errorCode) {\n              case 'auth/email-already-in-use': ;\n              case 'auth/invalid-email': {\n                this.registrationForm.get('emailFormControl').setErrors({\n                  error: errorMessage,\n                });\n                this.emailError = errorMessage;\n                break;\n              }\n              case 'auth/weak-password': {\n                this.registrationForm.get('passwordsGroup.passwordFormControl').setErrors({\n                  weakPassword: true,\n                });\n                this.passwordError = errorMessage;\n                break;\n              }\n              default: {\n                console.log(error);\n              }\n            }\n          }\n        }\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { auth, FirebaseError } from 'firebase';\nimport { Observable, from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user: firebase.User;\n\n  constructor(public afAuth: AngularFireAuth, private router:Router) {\n    this.afAuth.user.subscribe(user => this.user = user);\n  }\n\n  signInWithEmail(email: string, password: string): Observable<FirebaseError> {\n    return from<FirebaseError>(\n      this.afAuth.auth.signInWithEmailAndPassword(email, password)\n        .then(() => null)\n        .catch(error => error)\n    );\n  }\n\n  isLoggedIn(): boolean {\n    return Boolean(this.user);\n  }\n\n  signUpWithEmail(email: string, password: string): Observable<FirebaseError> {\n    return from<FirebaseError>(\n      this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n        .then(() => null)\n        .catch(error => error)\n    );\n  }\n\n  signOut() {\n    this.afAuth.auth.signOut();\n  }\n}\n","export class Application {\n  id: number;\n  tags: Array<string>;\n  language: string;\n  time: Date;\n  audio: any;\n  countProposals: number;\n\n  constructor(id: number = null,\n              language: string = null,\n              tags: Array<string> = null,\n              time: Date = null,\n              countProposals: number = null,\n              audio: any = null) {\n    this.id = id;\n    this.language = language;\n    this.tags = tags;\n    this.time = time;\n    this.countProposals = countProposals;\n    this.audio = audio;\n  }\n}\n","export class Proposal {\n  id: number;\n  applicationId: number;\n  audio: any;\n}\n","import { Injectable } from '@angular/core';\nimport { Application } from '../models/application';\nimport { Proposal } from '../models/proposal';\nimport { Observable, of } from 'rxjs';\nimport { IApplicationService } from '../interfaces/i-application-service';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationService implements IApplicationService {\n  readonly applicationUrl = '/api/applications';\n  constructor(private http: HttpClient) { }\n\n  getApplications(): Observable<Application[]> {\n    return this.http.get<Application[]>(this.applicationUrl);\n  }\n\n  filterApplications(filterValue: string): Observable<Application[]> {\n    if (!filterValue.trim()) {\n      return this.getApplications();\n    }\n    return this.http.get<Application[]>(this.applicationUrl).pipe(\n      map(applications =>\n        applications.filter(app => {\n          return (\n            app.tags.findIndex(tag => tag === filterValue) !== -1 ||\n            app.language === filterValue\n          );\n        })\n      )\n    );\n  }\n\n  getProposals(): Observable<Proposal[]> {\n    const url = `/api/proposals`;\n    return this.http.get<Proposal[]>(url);\n  }\n\n  addProposal(proposal: Proposal): Observable<Proposal> {\n    return this.http.post<Proposal>('/api/proposals', proposal);\n  }\n\n  getMyApplication(): Observable<Application> {\n    return this.getApplications().pipe(\n      map(applications => applications[10])\n    );\n  }\n\n  addApplication(application: Application): Observable<Application> {\n    return this.http.post<Application>(this.applicationUrl, application);\n  }\n}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Application } from '../models/application';\nimport { Proposal } from '../models/proposal';\nimport { subMinutes } from 'date-fns';\n\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const appDate = new Date(Date.now());\n    const applications = [\n      new Application(1, 'english', ['music', 'rock', 'alternative'], appDate, 3, null),\n      new Application(2, 'english',\n                      ['sport', 'football', 'FIFA World Cup 2018', 'disappointment', 'prediction'],\n                      subMinutes(appDate, 2), 5, null),\n      new Application(3, 'english', ['hollywood walk of fame'], subMinutes(appDate, 10), 22, null),\n      new Application(4, 'chinese', ['culture', 'street food'], subMinutes(appDate, 30), 59, null),\n      new Application(5, 'french', ['paris', 'attraction', 'landmark'], subMinutes(appDate, 59), 31, null),\n      new Application(6, 'french', [], subMinutes(appDate, 60), 18, null),\n      new Application(7, 'german', [], subMinutes(appDate, 80), 3, null),\n      new Application(8, 'german', ['politics', 'election'], subMinutes(appDate, 100), 11, null),\n      new Application(9, 'chinese', ['tell me about shanghai'], subMinutes(appDate, 120), 15, null),\n      new Application(10, 'french', ['everything'], subMinutes(appDate, 28), 66, null),\n    ];\n    const proposals: Proposal[] = [\n      {\n        id: 1,\n        applicationId: 1,\n        audio: undefined,\n      },\n      {\n        id: 2,\n        applicationId: 3,\n        audio: undefined,\n      },\n      {\n        id: 3,\n        applicationId: 8,\n        audio: undefined,\n      },\n    ];\n    return {applications, proposals};\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoiceRecorderService {\n\n  constructor() { }\n\n  start(): Observable<boolean> {\n    return of(true);\n  }\n\n  stop(): Observable<any> {\n    return of('audio');\n  }\n}\n","module.exports = \"<div class=\\\"application-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n  <mat-card fxFlex.gt-xs=\\\"600px\\\" fxFlex.xs=\\\"grow\\\">\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start\\\">\\n        <div fxFlexAlign=\\\"center\\\" fxFlex=\\\"{{playerState != PlayerState.Playing? 'none' : 'grow'}}\\\">\\n          <app-player\\n            (changeState)=\\\"changePlayerState($event)\\\"\\n            [color]=\\\"proposal? 'primary' : null\\\"\\n          >\\n          </app-player>\\n        </div>\\n        <ng-container *ngIf=\\\"playerState != PlayerState.Playing\\\">\\n          <div class=\\\"tag-list\\\" fxFlex.gt-xs=\\\"grow\\\" fxFlexAlign=\\\"center\\\">\\n            <mat-chip-list>\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <mat-chip fxFlex=\\\"none\\\">{{ application.language }}</mat-chip>\\n                <mat-chip fxFlex=\\\"none\\\" *ngFor=\\\"let tag of application.tags\\\">\\n                  {{ tag }}\\n                </mat-chip>\\n              </div>\\n            </mat-chip-list>\\n          </div>\\n          <div fxFlex=\\\"nogrow\\\" fxHide.xs>\\n            <mat-divider fxFlexFill [inset]=\\\"true\\\" [vertical]=\\\"true\\\"></mat-divider>\\n          </div>\\n          <div fxFlex=\\\"0 0 57px\\\" fxFlexAlign=\\\"center\\\" fxHide.xs>\\n            <div\\n              fxLayout=\\\"row\\\"\\n              fxLayoutAlign=\\\"center center\\\"\\n              fxLayoutGap=\\\"5px\\\"\\n              matTooltip=\\\"Created {{elapsedTime()}} ago\\\"\\n            >\\n              <div class=\\\"mat-caption\\\">\\n                {{elapsedTime()}}\\n              </div>\\n              <mat-icon>timelapse</mat-icon>\\n            </div>\\n          </div>\\n          <div fxFlex=\\\"nogrow\\\" fxHide.xs>\\n              <mat-divider fxFlexFill [inset]=\\\"true\\\" [vertical]=\\\"true\\\"></mat-divider>\\n            </div>\\n          <div fxFlex.gt-xs=\\\"0 0 66px\\\" fxFlexAlign=\\\"center\\\" fxHide.xs>\\n            <div\\n              fxLayout=\\\"row\\\"\\n              fxLayoutAlign=\\\"center\\\"\\n              fxLayoutGap=\\\"5px\\\"\\n              matTooltip=\\\"{{numberOfProposals(application.countProposals)}} people created proposal for this application\\\"\\n            >\\n              <div class=\\\"mat-body-2\\\">\\n                {{numberOfProposals(application.countProposals)}}\\n              </div>\\n              <mat-icon>face</mat-icon>\\n            </div>\\n          </div>\\n          <div fxFlex=\\\"nogrow\\\">\\n            <mat-divider fxFlexFill [inset]=\\\"true\\\" [vertical]=\\\"true\\\"></mat-divider>\\n          </div>\\n          <div fxFlex=\\\"none\\\" fxFlexAlign=\\\"center\\\">\\n            <button\\n              *ngIf=\\\"!isProposalDialogOpen\\\"\\n              mat-icon-button\\n              (click)=\\\"openProposalDialog(application.id)\\\"\\n            >\\n              <mat-icon [color]=\\\"proposal? 'primary' : null\\\">arrow_drop_down</mat-icon>\\n            </button>\\n            <button\\n              *ngIf=\\\"isProposalDialogOpen\\\"\\n              mat-icon-button\\n              (click)=\\\"closeProposalDialog()\\\"\\n            >\\n              <mat-icon [color]=\\\"proposal? 'primary' : null\\\">arrow_drop_up</mat-icon>\\n            </button>\\n          </div>\\n        </ng-container>\\n      </div>\\n  \\n      <ng-container *ngIf=\\\"isProposalDialogOpen\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxHide.gt-xs=\\\"true\\\">\\n          <div fxFlex=\\\"grow\\\" fxFlexAlign=\\\"center\\\">\\n            <div\\n              fxLayout=\\\"row\\\"\\n              fxLayoutAlign=\\\"center center\\\"\\n              fxLayoutGap=\\\"5px\\\"\\n              matTooltip=\\\"Created {{elapsedTime()}} ago\\\"\\n            >\\n              <div class=\\\"mat-caption\\\">\\n                {{elapsedTime()}}\\n              </div>\\n              <mat-icon>timelapse</mat-icon>\\n            </div>\\n          </div>\\n          <div fxFlex=\\\"nogrow\\\">\\n            <mat-divider fxFlexFill [inset]=\\\"true\\\" [vertical]=\\\"true\\\"></mat-divider>\\n          </div>\\n          <div fxFlex=\\\"grow\\\" fxFlexAlign=\\\"center\\\">\\n            <div\\n              fxLayout=\\\"row\\\"\\n              fxLayoutAlign=\\\"center\\\"\\n              fxLayoutGap=\\\"5px\\\"\\n              matTooltip=\\\"{{numberOfProposals(application.countProposals)}} people created proposal for this application\\\"\\n            >\\n              <div class=\\\"mat-body-2\\\">\\n                {{numberOfProposals(application.countProposals)}}\\n              </div>\\n              <mat-icon>face</mat-icon>\\n            </div>\\n          </div>\\n        </div>\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n        <ng-container *ngIf=\\\"!proposal\\\">\\n          <app-create-proposal\\n            [applicationId]=\\\"application.id\\\"\\n            (close)=\\\"createdProposal($event)\\\"\\n          >\\n          </app-create-proposal>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"proposal\\\">\\n          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\">\\n            <div class=\\\"mat-title\\\" fxFlexAlign=\\\"center\\\">Your Proposal</div>\\n            <app-player [showTimeline]=\\\"true\\\"></app-player>\\n          </div>\\n        </ng-container>\\n      </ng-container>\\n    </div>\\n  </mat-card>\\n</div>\\n\"","module.exports = \".tag-list {\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n  min-width: 0; }\\n\\n.application-container .mat-card {\\n  padding: 15px; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\n\nimport { differenceInMinutes } from 'date-fns';\n\nimport { PlayerComponent } from '../player/player.component';\nimport { Application } from '../../models/application';\nimport { PlayerState } from '../player/player-state';\nimport { Proposal } from '../../models/proposal';\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.scss']\n})\nexport class ApplicationComponent implements OnInit {\n  PlayerState = PlayerState;\n  playerState = PlayerState.NotStarted;\n  @ViewChild(PlayerComponent) playerComponent;\n  @Input() application: Application;\n  @Input() proposal: Proposal;\n  @Output() changePlayer = new EventEmitter<PlayerState>();\n  isProposalDialogOpen = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  openProposalDialog() {\n    this.isProposalDialogOpen = true;\n  }\n\n  closeProposalDialog() {\n    this.isProposalDialogOpen = false;\n  }\n\n  createdProposal(proposal: Proposal) {\n    if (!proposal) {\n      this.closeProposalDialog();\n    } else {\n      this.proposal = proposal;\n    }\n  }\n\n  changePlayerState(playerState: PlayerState) {\n    this.playerState = playerState;\n    this.changePlayer.emit(playerState);\n  }\n\n  elapsedTime(): string {\n    const time = differenceInMinutes(new Date(Date.now()), this.application.time);\n    if (time < 45) {\n      return `${time} m`;\n    }\n    if (time < 75) {\n      return `1 h`;\n    }\n    if (time < 105) {\n      return '1.5 h';\n    }\n    return '2 h';\n  }\n\n  numberOfProposals(proposalsCount): string {\n    if (proposalsCount < 5) {\n      return '< 5';\n    }\n    if (proposalsCount < 10) {\n      return '5-10';\n    }\n    if (proposalsCount < 20) {\n      return '10-20';\n    }\n    return '20-50';\n  }\n\n  stopPlaying(): void {\n    this.playerComponent.stop();\n  }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\n  <div\\n    *ngIf=\\\"!proposalMessage\\\"\\n    fxFlexAlign=\\\"center\\\"\\n    class=\\\"mat-title\\\"\\n  >\\n    Record Your Proposal\\n  </div>\\n  <div\\n    *ngIf=\\\"proposalMessage\\\"\\n    fxFlexAlign=\\\"center\\\"\\n    class=\\\"mat-title\\\"\\n  >\\n    Your Proposal\\n  </div>\\n  <app-record-voice (recordedVoice)=\\\"setRecordedProposal($event)\\\"></app-record-voice>\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"proposalMessage\\\">\\n    <button\\n      fxFlex=\\\"50%\\\"\\n      mat-raised-button\\n      color=\\\"warn\\\"\\n      (click)=\\\"discardProposal()\\\"\\n    >\\n      Discard\\n    </button>\\n    <button\\n      fxFlex=\\\"50%\\\"\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      (click)=\\\"submitProposal()\\\"\\n    >\\n      Submit\\n    </button>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, Inject, EventEmitter } from '@angular/core';\n\nimport { IApplicationService } from '../../interfaces/i-application-service';\nimport { ApplicationService } from '../../services/application.service';\nimport { Proposal } from '../../models/proposal';\n\n@Component({\n  selector: 'app-create-proposal',\n  templateUrl: './create-proposal.component.html',\n  styleUrls: ['./create-proposal.component.scss']\n})\nexport class CreateProposalComponent implements OnInit {\n  proposalMessage: any;\n  @Input() applicationId: number;\n  @Output() close = new EventEmitter<Proposal>();\n\n  constructor(@Inject(ApplicationService) private applicationService: IApplicationService) { }\n\n  ngOnInit() {\n  }\n\n  setRecordedProposal(voice: any) {\n    this.proposalMessage = voice;\n  }\n\n  discardProposal() {\n    this.proposalMessage = undefined;\n    this.close.emit(null);\n  }\n\n  submitProposal() {\n    const proposal: Proposal = {\n      id: Math.floor(Math.random() * 1000),\n      applicationId: this.applicationId,\n      audio: this.proposalMessage,\n    };\n    this.applicationService.addProposal(proposal).subscribe(\n      prop => {\n        this.proposalMessage = undefined;\n        this.close.emit(prop);\n      }\n    );\n  }\n}\n","module.exports = \"<div fxLayout=\\\"row\\\">\\n  <mat-form-field fxFlexFill>\\n    <mat-select\\n      placeholder=\\\"Select the language you've spoken\\\"\\n      (selectionChange)=\\\"selectionChanged($event)\\\"\\n    >\\n      <mat-option *ngFor=\\\"let lang of langs\\\" value={{lang.name}}>\\n        {{ lang.name }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { getNames, registerLocale } from '@cospired/i18n-iso-languages';\n\n\nclass Language {\n  code: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-input-language',\n  templateUrl: './input-language.component.html',\n  styleUrls: ['./input-language.component.scss']\n})\nexport class InputLanguageComponent implements OnInit {\n  langs: Array<Language>;\n  @Output() changeLanguage = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n    registerLocale(require('@cospired/i18n-iso-languages/langs/en.json'));\n    const languages = getNames('en');\n    this.langs = Object.keys(languages).map(lang => ({\n      code: lang,\n      name: languages[lang]\n    }));\n  }\n\n  selectionChanged(event: MatSelectChange) {\n    this.changeLanguage.emit(event.value.toLowerCase());\n  }\n}\n","module.exports = \"<div fxLayout=\\\"row\\\">\\n  <mat-form-field fxFlexFill>\\n    <mat-chip-list #chipList>\\n      <mat-chip\\n        *ngFor=\\\"let tag of tags\\\"\\n        removable\\n        (removed)=\\\"remove(tag)\\\"\\n      >\\n        {{tag}}\\n        <mat-icon matChipRemove>cancel</mat-icon>\\n      </mat-chip>\\n      <input\\n        #input\\n        matInput\\n        [readonly]=\\\"tags.length >= 5\\\"\\n        placeholder=\\\"Tags\\\"\\n        [maxLength]=\\\"maxTagLength\\\"\\n        [matChipInputFor]=\\\"chipList\\\"\\n        [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n        (matChipInputTokenEnd)=\\\"add($event)\\\"\\n      />\\n    </mat-chip-list>\\n    <mat-hint align=\\\"start\\\">{{tags.length}}/{{maxTagCount}} tags</mat-hint>\\n    <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/{{maxTagLength}}</mat-hint>\\n  </mat-form-field>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatChipInputEvent } from '@angular/material';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'app-input-tags',\n  templateUrl: './input-tags.component.html',\n  styleUrls: ['./input-tags.component.scss']\n})\nexport class InputTagsComponent implements OnInit {\n  readonly maxTagLength = 50;\n  readonly maxTagCount = 5;\n  @Input() tags: Array<string> = [];\n  @Output() tagsChanged = new EventEmitter<Array<string>>();\n  separatorKeysCodes = [ENTER, COMMA];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    if ((value || '').trim()) {\n      this.tags.push(value.trim().toLowerCase());\n      this.tagsChanged.emit(this.tags);\n    }\n\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  remove(tag: string): void {\n    const index = this.tags.indexOf(tag);\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n      this.tagsChanged.emit(this.tags);\n    }\n  }\n}\n","export enum PlayerState {\n  NotStarted,\n  Playing,\n  Finished,\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"20px\\\">\\n  <ng-container [ngSwitch]=\\\"state\\\">\\n    <button\\n      *ngSwitchCase=\\\"State.NotStarted\\\"\\n      mat-icon-button\\n      (click)=\\\"play()\\\"\\n    >\\n      <div class=\\\"icon\\\">\\n        <mat-icon [inline]=\\\"true\\\" [color]=\\\"color\\\">play_circle_outline</mat-icon>\\n      </div>\\n    </button>\\n    <button\\n      *ngSwitchCase=\\\"State.Playing\\\"\\n      mat-icon-button\\n      disableRipple\\n      (click)=\\\"stop()\\\"\\n    >\\n      <div class=\\\"icon\\\">\\n        <mat-icon inline [color]=\\\"color\\\">stop</mat-icon>\\n      </div>\\n    </button>\\n  </ng-container>\\n\\n  <div fxFlex=\\\"grow\\\" *ngIf=\\\"showTimeline || state === State.Playing\\\">\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\n      <mat-progress-bar color=\\\"accent\\\" mode=\\\"determinate\\\" [value]=\\\"time/30*100\\\"></mat-progress-bar>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        {{time}}s / {{duration}}s\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".icon {\\n  font-size: 48px;\\n  height: 48px;\\n  width: 48px;\\n  line-height: 48px; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { timer, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PlayerState } from './player-state';\n\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.scss']\n})\nexport class PlayerComponent implements OnInit {\n  State = PlayerState;\n  @Input() duration = 30;\n  @Input() showTimeline = false;\n  @Input() color;\n  state = this.State.NotStarted;\n  timer: Subscription;\n  time: Number = 0;\n\n  @Output() changeState = new EventEmitter<PlayerState>();\n\n  ngOnInit() {\n    this.changeState.emit(this.state);\n  }\n\n  subscribeToTimer() {\n    this.timer = timer(0, 1000).pipe(take(this.duration + 1)).subscribe(\n      value => this.time = value,\n      err => {},\n      () => this.stop()\n    );\n  }\n\n  play() {\n    this.state = this.State.Playing;\n    this.changeState.emit(this.state);\n    this.subscribeToTimer();\n  }\n\n  stop() {\n    this.state = this.State.NotStarted;\n    this.time = 0;\n    this.changeState.emit(this.state);\n    this.timer.unsubscribe();\n  }\n}\n","module.exports = \"<p>\\n  proposal works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-proposal',\n  templateUrl: './proposal.component.html',\n  styleUrls: ['./proposal.component.scss']\n})\nexport class ProposalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<ng-container [ngSwitch]=\\\"state\\\">\\n  <div\\n    *ngSwitchCase=\\\"State.NotStarted\\\"\\n    fxLayout=\\\"row\\\"\\n  >\\n    <button fxFlexFill color=\\\"accent\\\" mat-raised-button (click)=\\\"startRecording()\\\">\\n      <mat-icon>mic</mat-icon>\\n      Click To Record the Voice\\n    </button>\\n  </div>\\n\\n  <ng-container *ngSwitchCase=\\\"State.Started\\\">\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"20px\\\">\\n      <div fxFlexFill>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"20px\\\">\\n          <div class=\\\"icon\\\">\\n            <mat-icon inline>record_voice_over</mat-icon>\\n          </div>\\n          <div fxFlex=\\\"grow\\\">\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n              <mat-progress-bar color=\\\"accent\\\" mode=\\\"determinate\\\" [value]=\\\"time/30*100\\\"></mat-progress-bar>\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n                {{time}}s / {{maxDuration}}s\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <button\\n        fxFlexFill\\n        mat-raised-button\\n        color=\\\"accent\\\"\\n        (click)=\\\"finishRecording()\\\"\\n        >\\n          Stop Recording\\n        </button>\\n    </div>\\n  </ng-container>\\n  \\n  <ng-container *ngSwitchCase=\\\"State.Finished\\\">\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"20px\\\">\\n      <div fxFlexFill>\\n        <app-player [showTimeline]=\\\"true\\\"></app-player>\\n      </div>\\n      <button fxFlexFill color=\\\"accent\\\" mat-raised-button (click)=\\\"startRecording()\\\">\\n        Rerecord Message\\n      </button>\\n    </div>\\n  </ng-container>\\n</ng-container>\\n\"","module.exports = \".icon {\\n  font-size: 48px; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { timer, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { VoiceRecorderService } from '../../services/voice-recorder.service';\n\nenum RecordingState {\n  NotStarted,\n  Started,\n  Finished,\n  Playing,\n}\n\n@Component({\n  selector: 'app-record-voice',\n  templateUrl: './record-voice.component.html',\n  styleUrls: ['./record-voice.component.scss']\n})\nexport class RecordVoiceComponent implements OnInit {\n  State = RecordingState;\n\n  @Input() maxDuration = 30;\n  @Output() recordedVoice = new EventEmitter<any>();\n  state = this.State.NotStarted;\n  timer: Subscription;\n  time: Number = null;\n\n  constructor(private voiceRecorderService: VoiceRecorderService) { }\n\n  ngOnInit() {\n  }\n\n  subscribeToTimer() {\n    this.timer = timer(0, 1000).pipe(take(this.maxDuration + 1)).subscribe(\n      value => this.time = value,\n      err => {},\n      () => this.finishRecording()\n    );\n  }\n\n  startRecording() {\n    this.voiceRecorderService.start().subscribe(\n      start => {\n        if (start) {\n          this.state = this.State.Started;\n          this.recordedVoice.emit(undefined);\n          this.subscribeToTimer();\n        }\n      }\n    );\n  }\n\n  finishRecording() {\n    this.voiceRecorderService.stop().subscribe(\n      audio => {\n        this.state = this.State.Finished;\n        this.timer.unsubscribe();\n        this.recordedVoice.emit(audio);\n      }\n    );\n  }\n\n  playApplication() {\n    this.state = this.State.Playing;\n    this.subscribeToTimer();\n  }\n\n  stopPlayingApplication() {\n    this.state = this.State.Finished;\n    this.timer.unsubscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCkT5K4_8eZQbqDm9LfSCPQpNG7p3o0hSY',\n    authDomain: 'loyts-37bcb.firebaseapp.com',\n    databaseURL: 'https://loyts-37bcb.firebaseio.com',\n    projectId: 'loyts-37bcb',\n    storageBucket: 'loyts-37bcb.appspot.com',\n    messagingSenderId: '162500754565'\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}